c
currentUser
n
Skill.last
Skill.all
currentUser
 c
params
c
q
User.find_by_email("temp70@temp.com")
User.find_by_email("temp63@temp.com")
User.find_by_email("temp80@temp.com")
User.find_by_email("temp65@temp.com")
newUser.errors
newUser
c
User.last
lastUser
c
q
User.find_by_email("temp58@temp.com")
User.find_by_email("temp57@temp.com")
newUser.errors
User.last
newUser
n
User.all.length
User.length
User.last
User.las
ii
quit
User.last
newUser.errors
newUser
User.last
quit
User.last
newUser.errors
c
q
c
mongo_id
posting
q
mongo_id["$oid"]
mongo_id
posting.mongo_id
posting_mongo_id
n
posting
q
c
Job.where(is_description_annotated: true).length
Job.where(is_description_annotated: true)
Job
posting[0].description
posting[1].description
posting[1]
posting[0]
posting
c
posting
posting.delete_all
c
posting.delete_all
c
posting.delete_all
c
posting.delete_all
c
posting.delete_all
c
posting.delete_all
c
posting.delete_all
posting
c
posting[1].delete
posting[0].delete
posting.delete
posting.length
posting
quit
c
posting[5].delete
posting[4].delete
posting[5]
posting[4]
posting[3]
posting[5]
posting[1]
posting[0]
posting
c
posting[0].delete
c
posting[0].delete
posting
c
posting[1].delete
posting[0].delete
c
posting[1].delete
posting[0].delete
c
posting[1].delete
posting[0].delete
c
posting[1].delete
posting[0].delete
posting.length
posting
c
posting[1].delete
posting[0].delete
posting[2].annotations.length
posting[1].annotations.length
posting[0].annotations.length
posting[0].annotations
posting.length
posting
quit
quit()
Job.where(title: job_title, company_name: company_name).length
Job.where(title: job_title, company_name: company_name)
posting[1]
posting[0]
posting[0].save
posting[0]
posting[1]
posting[1].mongo_id
posting[0].mongo_id
posting
posting[0].annotations.length
posting
posting[1].annotations
posting[1].annotations.length
posting[0].annotations.length
posting[0].annotations
posting[1]
posting[0]
posting
quit
y
q
posting.length
posting
c
bestCandidateScore
bestCandidate
bestCandidate.annotations.length
bestCandidate.annotations
bestCandidate
bestCandidateScore
q
c
sim
n
annotation2.optional_skills
annotation1.optional_skills
sim
n
annotation1.skills
annotation2.skills = "best practices, business insights, credit, credit cards, financial services, lending, liability, mentor, mortgage, optimization, predictive modeling, Premier, project management, retail"
annotation1.personality
sim
n
sim
n
q
annotation1.personality
n
annotation2.skills = "best practices, business insights, credit, credit cards, financial services, lending, liability, mentor, mortgage, optimization, predictive modeling, Premier, project management, retail"
annotation2.skills
annotation1.skills
annotation1
n
q
annotation1.work_area
annotation2.work_area
annotation2.degree_major
annotation1.degree_major
annotation1
q
annotation2.skills
annotation1.skills
annotation2.education_level
sim
n
sim
n
annotation1
c
sim
n
sim
n
annotation1
c
annotation2.education_level
annotation1.education_level
Annotation.compute_string_similarity(annotation1.education_level, annotation2.education_level)
sim
n
q
Set.new.length.to_f
Set.new.length.to_float
Set.new.length
Set.new
c
sim
n
annotation2.work_type
annotation1.work_type
sim
n
sim
n
sim
n
sim
q
candidateScore
q
s.downcase.split(",")
s = "hi,THIS,test"
s.downcase
s.lowercase
s.lower
s = "HI"
q
oracleAnnotation
Annotation.where(user: candidate).order('created_at ASC')[jobId-1]
oracleAnnotation.job
@job_to_annotate
oracleAnnotation
@job_to_annotate.annotations
@job_to_annotate
annotationByCandidate
oracleAnnotation
n
oracleAnnotation
annotationByCandidate
n
q
d
c
oracleAnnotation
Annotation.where(user: candidate).order('created_at ASC')[0]
Annotation.where(user: candidate).order('created_at ASC')
Annotation.where(user: candidate).order('created_at ASC')[-]
oracleAnnotation.job.description
oracleAnnotation.job
oracleAnnotation
